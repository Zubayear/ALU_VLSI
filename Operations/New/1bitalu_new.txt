// DSCH 2.7a
// 29-Mar-20 3:39:21 AM
// C:\Users\user\Downloads\Export dsch2\Export dsch2\Export dsch2\Jubaer_Project\Operations\New\1bitalu_new.sch

module 1bitalu_new( A,Cin,B,Bin,S1,S2,S3,S0,
 Cout,Bout,out3);
 input A,Cin,B,Bin,S1,S2,S3,S0;
 output Cout,Bout,out3;
 wire w28,w29,w30,w31,w32,w33,w34,w35;
 wire w36,w37,w38,w39,w40,w41,w42,w43;
 wire w44,w45,w46,w47,w48,w49,w50,w51;
 wire w52,w53,w54,w55,w56,w57,w58,w59;
 wire w60,w61,w62,w63,w64,w65,w66,w67;
 wire w68,w69,w70,w71,w72,w73,w74,w75;
 wire w76,w77,w78,w79,w80,w81,w82,w83;
 wire w84,w85,w86,w87,w88,w89,w90,w91;
 wire w92,w93,w94,w95,w96,w97,w98,w99;
 wire w100;
 mux #(27) mux16_1_new(out3,S1,S0,w3,w4,w5,w6,w7,w8,w9,w10,w11,w12,S2,w14,w15,w16,w17,w18,w19,S3);
 nand #(41) nand(w6,B,A);
 not #(34) notgate_new(w15,A);
 mux #(31) mux4_mu1(w28,S0,S1,w6,w4,w3,w5);
 mux #(31) mux4_mu2(w29,S0,S1,w7,w9,w10,w8);
 mux #(31) mux4_mu3(w30,S0,S1,w11,w19,w18,w12);
 mux #(24) mux4_mu4(out3,S2,S3,w28,w29,w31,w30);
 mux #(31) mux4_mu5(w31,S0,S1,w14,w16,w17,w15);
 mux #(13) mux_mu1_mu6(w32,w6,w4,S0);
 mux #(13) mux_mu2_mu7(w33,w3,w5,S0);
 mux #(27) mux_mu3_mu8(w28,w33,w32,S1);
 mux #(13) mux_mu4_mu9(w34,w7,w9,S0);
 mux #(13) mux_mu5_mu10(w35,w10,w8,S0);
 mux #(27) mux_mu6_mu11(w29,w35,w34,S1);
 mux #(13) mux_mu7_mu12(w36,w11,w19,S0);
 mux #(13) mux_mu8_mu13(w37,w18,w12,S0);
 mux #(27) mux_mu9_mu14(w30,w37,w36,S1);
 mux #(13) mux_mu10_mu15(w38,w28,w29,S2);
 mux #(13) mux_mu11_mu16(w39,w31,w30,S2);
 mux #(20) mux_mu12_mu17(out3,w39,w38,S3);
 mux #(13) mux_mu13_mu18(w40,w14,w16,S0);
 mux #(13) mux_mu14_mu19(w41,w17,w15,S0);
 mux #(27) mux_mu15_mu20(w31,w41,w40,S1);
 pmos #(40) pmos_na21(w6,vdd,A); //  
 pmos #(40) pmos_na22(w6,vdd,B); //  
 nmos #(40) nmos_na23(w6,w42,A); //  
 nmos #(12) nmos_na24(w42,vss,B); //  
 pmos #(38) pmos_XO1_FU25(w44,vdd,w43); //  
 nmos #(38) nmos_XO2_FU26(w44,vss,w43); //  
 pmos #(62) pmos_XO3_FU27(w45,Cin,w43); //  
 nmos #(62) nmos_XO4_FU28(w45,Cin,w44); //  
 pmos #(62) pmos_XO5_FU29(w45,w43,Cin); //  
 nmos #(62) nmos_XO6_FU30(w45,w44,Cin); //  
 pmos #(33) pmos_XO7_FU31(w3,vdd,w46); //  
 nmos #(33) nmos_XO8_FU32(w3,vss,w46); //  
 nmos #(38) nmos_XO9_FU33(w46,vss,w45); //  
 pmos #(38) pmos_XO10_FU34(w46,vdd,w45); //  
 pmos #(38) pmos_XO11_FU35(w47,vdd,A); //  
 nmos #(38) nmos_XO12_FU36(w47,vss,A); //  
 pmos #(62) pmos_XO13_FU37(w48,B,A); //  
 nmos #(62) nmos_XO14_FU38(w48,B,w47); //  
 pmos #(62) pmos_XO15_FU39(w48,A,B); //  
 nmos #(62) nmos_XO16_FU40(w48,w47,B); //  
 pmos #(78) pmos_XO17_FU41(w43,vdd,w49); //  
 nmos #(78) nmos_XO18_FU42(w43,vss,w49); //  
 nmos #(38) nmos_XO19_FU43(w49,vss,w48); //  
 pmos #(38) pmos_XO20_FU44(w49,vdd,w48); //  
 pmos #(50) pmos_OR21_FU45(w52,w50,w51); //  
 pmos #(13) pmos_OR22_FU46(w50,vdd,w53); //  
 nmos #(50) nmos_OR23_FU47(w52,vss,w53); //  
 nmos #(50) nmos_OR24_FU48(w52,vss,w51); //  
 nmos #(26) nmos_OR25_FU49(Cout,vss,w52); //  
 pmos #(26) pmos_OR26_FU50(Cout,vdd,w52); //  
 pmos #(50) pmos_AN27_FU51(w54,vdd,A); //  
 pmos #(50) pmos_AN28_FU52(w54,vdd,B); //  
 nmos #(50) nmos_AN29_FU53(w54,w55,A); //  
 nmos #(13) nmos_AN30_FU54(w55,vss,B); //  
 pmos #(1) pmos_AN31_FU55(w58,w56,w57); //  
 nmos #(1) nmos_AN32_FU56(w60,w59,w57); //  
 nmos #(36) nmos_AN33_FU57(w51,vss,w54); //  
 pmos #(36) pmos_AN34_FU58(w51,vdd,w54); //  
 pmos #(50) pmos_AN35_FU59(w61,vdd,Cin); //  
 pmos #(50) pmos_AN36_FU60(w61,vdd,w43); //  
 nmos #(50) nmos_AN37_FU61(w61,w62,Cin); //  
 nmos #(13) nmos_AN38_FU62(w62,vss,w43); //  
 pmos #(1) pmos_AN39_FU63(w65,w63,w64); //  
 nmos #(1) nmos_AN40_FU64(w67,w66,w64); //  
 nmos #(36) nmos_AN41_FU65(w53,vss,w61); //  
 pmos #(36) pmos_AN42_FU66(w53,vdd,w61); //  
 pmos #(44) pmos_OR67(w69,w68,B); //  
 pmos #(12) pmos_OR68(w68,vdd,A); //  
 nmos #(44) nmos_OR69(w69,vss,A); //  
 nmos #(44) nmos_OR70(w69,vss,B); //  
 nmos #(30) nmos_OR71(w7,vss,w69); //  
 pmos #(30) pmos_OR72(w7,vdd,w69); //  
 pmos #(38) pmos_XO1_FU73(w71,vdd,w70); //  
 nmos #(38) nmos_XO2_FU74(w71,vss,w70); //  
 pmos #(62) pmos_XO3_FU75(w72,Bin,w70); //  
 nmos #(62) nmos_XO4_FU76(w72,Bin,w71); //  
 pmos #(62) pmos_XO5_FU77(w72,w70,Bin); //  
 nmos #(62) nmos_XO6_FU78(w72,w71,Bin); //  
 pmos #(33) pmos_XO7_FU79(w18,vdd,w73); //  
 nmos #(33) nmos_XO8_FU80(w18,vss,w73); //  
 nmos #(38) nmos_XO9_FU81(w73,vss,w72); //  
 pmos #(38) pmos_XO10_FU82(w73,vdd,w72); //  
 pmos #(36) pmos_NO11_FU83(w74,vdd,A); //  
 nmos #(36) nmos_NO12_FU84(w74,vss,A); //  
 pmos #(50) pmos_OR13_FU85(w77,w75,w76); //  
 pmos #(13) pmos_OR14_FU86(w75,vdd,w78); //  
 nmos #(50) nmos_OR15_FU87(w77,vss,w78); //  
 nmos #(50) nmos_OR16_FU88(w77,vss,w76); //  
 nmos #(26) nmos_OR17_FU89(Bout,vss,w77); //  
 pmos #(26) pmos_OR18_FU90(Bout,vdd,w77); //  
 pmos #(38) pmos_XO19_FU91(w79,vdd,A); //  
 nmos #(38) nmos_XO20_FU92(w79,vss,A); //  
 pmos #(62) pmos_XO21_FU93(w80,B,A); //  
 nmos #(62) nmos_XO22_FU94(w80,B,w79); //  
 pmos #(62) pmos_XO23_FU95(w80,A,B); //  
 nmos #(62) nmos_XO24_FU96(w80,w79,B); //  
 pmos #(78) pmos_XO25_FU97(w70,vdd,w81); //  
 nmos #(78) nmos_XO26_FU98(w70,vss,w81); //  
 nmos #(38) nmos_XO27_FU99(w81,vss,w80); //  
 pmos #(38) pmos_XO28_FU100(w81,vdd,w80); //  
 pmos #(36) pmos_NO29_FU101(w82,vdd,w70); //  
 nmos #(36) nmos_NO30_FU102(w82,vss,w70); //  
 pmos #(50) pmos_AN31_FU103(w83,vdd,B); //  
 pmos #(50) pmos_AN32_FU104(w83,vdd,w74); //  
 nmos #(50) nmos_AN33_FU105(w83,w84,B); //  
 nmos #(13) nmos_AN34_FU106(w84,vss,w74); //  
 pmos #(1) pmos_AN35_FU107(w87,w85,w86); //  
 nmos #(1) nmos_AN36_FU108(w89,w88,w86); //  
 nmos #(36) nmos_AN37_FU109(w78,vss,w83); //  
 pmos #(36) pmos_AN38_FU110(w78,vdd,w83); //  
 pmos #(50) pmos_AN39_FU111(w90,vdd,Bin); //  
 pmos #(50) pmos_AN40_FU112(w90,vdd,w82); //  
 nmos #(50) nmos_AN41_FU113(w90,w91,Bin); //  
 nmos #(13) nmos_AN42_FU114(w91,vss,w82); //  
 pmos #(1) pmos_AN43_FU115(w94,w92,w93); //  
 nmos #(1) nmos_AN44_FU116(w96,w95,w93); //  
 nmos #(36) nmos_AN45_FU117(w76,vss,w90); //  
 pmos #(36) pmos_AN46_FU118(w76,vdd,w90); //  
 pmos #(33) pmos_XO119(w97,vdd,A); //  
 nmos #(33) nmos_XO120(w97,vss,A); //  
 pmos #(54) pmos_XO121(w98,B,A); //  
 nmos #(54) nmos_XO122(w98,B,w97); //  
 pmos #(54) pmos_XO123(w98,A,B); //  
 nmos #(54) nmos_XO124(w98,w97,B); //  
 pmos #(30) pmos_XO125(w19,vdd,w99); //  
 nmos #(30) nmos_XO126(w19,vss,w99); //  
 nmos #(33) nmos_XO127(w99,vss,w98); //  
 pmos #(33) pmos_XO128(w99,vdd,w98); //  
 pmos #(30) pmos_no129(w15,vdd,A); //  
 nmos #(30) nmos_no130(w15,vss,A); //  
 pmos #(40) pmos_NO131(w8,w100,B); //  
 pmos #(12) pmos_NO132(w100,vdd,A); //  
 nmos #(40) nmos_NO133(w8,vss,A); //  
 nmos #(40) nmos_NO134(w8,vss,B); //  
endmodule

// Simulation parameters in Verilog Format
always
#1000 A=~A;
#2000 Cin=~Cin;
#4000 B=~B;
#8000 Bin=~Bin;
#16000 S1=~S1;
#32000 S2=~S2;
#64000 S3=~S3;
#128000 S0=~S0;

// Simulation parameters
// A CLK 10 10
// Cin CLK 20 20
// B CLK 40 40
// Bin CLK 80 80
// S1 CLK 160 160
// S2 CLK 320 320
// S3 CLK 640 640
// S0 CLK 1280 1280
